# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  schedule:
    - cron: "0 7 * * *" # Daily at 7AM UTC

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# and writing to this repo with changed data.
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build Eleventy
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: ./awdty

    - name: Checkout mozilla-firefox/firefox
      uses: actions/checkout@v4
      with:
        repository: mozilla-firefox/firefox
        path: ./mozilla-unified

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Setup Node.js environment
      uses: actions/setup-node@v4

    - name: Install packages and build
      working-directory: ./awdty
      run: |
        npm ci
        npm run build
        npm run test-ci

    - name: Check for Changes
      working-directory: ./awdty
      id: check_changes
      run: |
        if [[ -n "$(git diff --exit-code src/data/propagationHistory.json)" ]]; then
          echo "History Changes detected."
          echo "::set-output name=has_changes::true"
        else
          echo "No history changes detected."
          echo "::set-output name=has_changes::false"
        fi

    - name: Conditionally update history data
      working-directory: ./awdty
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add src/data/propagationHistory.json
        git commit -m "Update history data $(git -C ../mozilla-unified show -s --format=%cs)"
        git push

    - name: Upload build artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload entire repository
        path: './awdty/build'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
