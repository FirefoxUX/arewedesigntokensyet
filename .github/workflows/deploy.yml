# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  schedule:
    - cron: "0 7 * * *" # Daily at 7AM UTC

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build Eleventy
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
        path: ./awdty

    - name: Checkout mozilla-firefox/firefox
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
        repository: mozilla-firefox/firefox
        path: ./mozilla-unified

    - name: Setup Pages
      uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

    - name: Setup Node.js environment
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0

    - name: Install packages and build
      working-directory: ./awdty
      run: |
        npm ci
        npm run build
        npm run test-ci

    - name: Check for Changes
      working-directory: ./awdty
      id: check_changes
      run: |
        if [[ -n "$(git diff --exit-code src/data/propagationHistory.json)" ]]; then
          echo "History Changes detected."
          echo "::set-output name=has_changes::true"
        else
          echo "No history changes detected."
          echo "::set-output name=has_changes::false"
        fi

    - name: Conditionally update history data
      working-directory: ./awdty
      if: steps.check_changes.outputs.has_changes == 'true'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GH_HOST: github.com
      # Using `persist-credentials: false` in the checkout means we'll need to use
      # gh to configure git to use the Github CLI as a credential helper. This will use the
      # GH_TOKEN in the env without that being persisted.
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add 'src/data/**/propagationHistory.json' 'src/data/propagationHistory.json'
        git commit -m "Update history data $(git -C ../mozilla-unified show -s --format=%cs)"
        gh auth setup-git
        git push https://github.com/FirefoxUX/arewedesigntokensyet.git main

    - name: Upload build artifacts
      uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4.0.0
      with:
        # Upload entire repository
        path: './awdty/build'

  # Deployment job
  deploy:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
